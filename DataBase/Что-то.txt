[Table("bo12356oks")]
[Required, Column("id")]

public Context(ILogger<Context> logger, IConfiguration configuration)
{
    Database.EnsureCreated();
    logger.LogDebug("контекст создан");
    Configuration = configuration;
}

@attribute [StreamRendering]

protected override async Task OnInitializedAsync()

<!--
    Автоматически подключаемый скрипт, который устанавливает подключение между
    браузером и сервером посредством SignalR и обеспечивает интерактивность.
-->
<script src="_framework/blazor.web.js"></script>

<!--
    Компонент Routes использует встроенный компонент Router, который добавляет возможность
    маршрутизации по вложенным компонентам. Его атрибут AppAssembly указывает на сборку,
    в которой следует искать запрошенные вложенные компоненты.

    При запросе компонентов может быть две ситуации: запрошенный ресурс (компонент) найден и ресурс не найден.
    1. Если с запрошенным путем сопоставлен определенный компонент, то рендерится вложенный компонент Found.
    2. Если компоненты для определенного пути не найдены, то приложение просто отправляет ошибку 404.

    Компонент Found содержит другой компонент - RouteView.
    Через атрибут RouteData он получает контекст маршрутизации,
    который будут использоваться при обработке запроса.

    А другой атрибут - DefaultLayout устанавливает компонент, который будет определять
    компоновку (layout) содержимого - в данном случае это компонент MainLayout из папки Layout.
-->

<!--
    С помощью элемента <NavMenu /> добавляется компонент NavMenu из файла
    Shared/NavMenu.razor, который создает систему навигации. фактически берёт вёрстку из другого файла.
-->

<!--
    Посредством свойства @Body в определенном месте разметки будет рендерится выбранный для обработки запроса компонент.
    То есть именно за место вызова @Body будет добавляться контент компонентов Home, Counter и Weather из папки Pages.
-->

    /*
     * Здесь должна быть некоторая обработка полученных или загружаемых данных.
     * Пустые значения должны быть устранены.
     * Упаковка данных от БД на сервер
     * Создание логирование.
     * Создать заранее файл типа .odt или .docx (если поддерживает) и наполнить его тегами как в отчёте Redmine. Клиент будет его редактировать и скачивать. 
     */

// все серверные страницы всегда статичны и максимум являются формами для данных
@rendermode InteractiveWebAssembly
@inject NavigationManager Navigation