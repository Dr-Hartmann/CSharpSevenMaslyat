@page "/editor"
<PageTitle>Editor</PageTitle>


<UpperPanel>
    <PanelElements />  <!-- Передаем делегат сюда -->
</UpperPanel>

<div class="row d-flex" style="justify-self: center; width: 40%;">
    @foreach (var input in Inputs)
    {
        <InputTextArea class="rounded-3 mt-2 mb-2" style="min-height:100px;" @bind-Value="input.Value" placeholder="Введите текст" />
        <div class="gap-3 d-flex justify-content-center">
            <button @onclick="a =>  AddInput(Inputs.IndexOf(input))" class=@buttonStyle>+</button>
            <button @onclick="a =>  Remove(Inputs.IndexOf(input))" class=@buttonStyle>-</button>
        </div>
    }
</div>

<div class="row d-flex" style="justify-self: center; width: 40%;">
    @foreach (var input in doc.Data.Keys)
    {

        <InputTextArea class="rounded-3 mt-2 mb-2" style="min-height:100px;" @bind-Value="doc.Data[input]" placeholder="@input" />

    }

</div>
@code {
    [Parameter]
    [SupplyParameterFromQuery(Name = "login")]
    public string login { get; set; }
    private string buttonStyle = "btn btn-outline-primary btn-sm px-4";

    @using MVPv5.Application.Contracts.Document.v1
    @using System.Text

    private List<InputModel> Inputs { get; set; } = new() { new() };

    private class InputModel
    {
        public Guid id { get; set; } = Guid.NewGuid();
        public string? Value { get; set; }
    }

    private void AddInput(int index)
    {
        Inputs.Insert(index + 1, new());
    }

    private void Remove(int index)
    {
        if (Inputs.Count() <= 1) return;
        Inputs.RemoveAt(index);
    }


    DocumentCreateRequest doc = new()
        {
            Name = "TestTest__111",
            Data = new Dictionary<string, string>
            {
                {"{{institute}}", "ЧГУ" },
                {"{{faculty}}", "" },
                {"{{type}}", "геморрой" }
            },
            TemplateId = 1,
            UserId = 1
        };
    protected override void OnInitialized()
    {
        Console.WriteLine(login);
    }
}
