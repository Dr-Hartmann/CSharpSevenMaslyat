@page "/editor"
<PageTitle>Editor</PageTitle>

<UpperToolbar />

@* TODO - ввод данных вызывает ошибку и работает неожиданно: внутри страницы можно скроллить *@

<div id="editor-container" style="overflow-y:auto; height: 100vh; background: #eee;">
    @foreach (var page in Pages)
    {
        <div @ref="page.ElementRef" class="docpage" contenteditable="true" @oninput="CheckOverflow">
            <div>@(page.Content)</div>
        </div>
    }
</div>
@code {
    @inject HttpClient httpClient
    @inject NavigationManager NavigationManager

    class PageModel
    {
        public string Content { get; set; } = "";
        public ElementReference ElementRef { get; set; }
    }

    List<PageModel> Pages = new() { new PageModel() };

    [Inject] IJSRuntime? JS { get; set; }

    async Task CheckOverflow(ChangeEventArgs e)
    {
        var lastPage = Pages.Last();
        bool isOverflowing = await JS!.InvokeAsync<bool>("checkPageOverflow", lastPage.ElementRef);

        if (isOverflowing)
        {
            Pages.Add(new PageModel());
            StateHasChanged(); // Ререндерим компонент
        }
    }

    //doc request
    protected override void OnInitialized()
    {
        var doc = GetDocumentCreateRequest.JsonData;
        Pages[0].Content = doc;

        //Нормальная реализация
        // var doc1 = httpClient.PostAsJsonAsync("DocumentEditor/ImportDocument", "123");
        // var doc = httpClient.GetAsync($"DocumentEditor/export/?id=0");
        // Pages[0].Content = doc.Result.ToString();
    }
    
    DocumentCreateRequest GetDocumentCreateRequest { get; set; } = new DocumentCreateRequest { Name = "FirstDoc", JsonData = "12312312312", Metadata = null, TemplateId = 0 };
    
}