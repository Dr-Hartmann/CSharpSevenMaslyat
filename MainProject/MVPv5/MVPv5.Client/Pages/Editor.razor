@page "/editor"
@using System.Text

<PageTitle>Editor</PageTitle>

<UpperToolbar />
<UpperPanel OnSave="saveDoc">
    <PanelElements OnSave="saveDoc" />  <!-- Передаем делегат сюда -->
</UpperPanel>

<div id="editor-container" style="overflow-y:auto; height: 100vh; background: #eee;">
    @foreach (var page in Pages)
    {
        <div @ref="page.ElementRef" class="docpage" contenteditable="true" @oninput="CheckOverflow">
            <div>@(page.Content)</div>
        </div>
    }
</div>

@code {
    @inject HttpClient httpClient
    @inject NavigationManager NavigationManager

    class PageModel
    {
        public string Content { get; set; } = "";
        public ElementReference ElementRef { get; set; }
    }

    List<PageModel> Pages = new() { new PageModel() };

    [Inject] IJSRuntime? JS { get; set; }

    async Task CheckOverflow(ChangeEventArgs e)
    {
        var lastPage = Pages.Last();
        bool isOverflowing = await JS!.InvokeAsync<bool>("checkPageOverflow", lastPage.ElementRef);

        if (isOverflowing)
        {
            Pages.Add(new PageModel());
            StateHasChanged(); // Ререндерим компонент
        }
    }

    protected override void OnInitialized()
    {
        var doc = GetDocumentCreateRequest.JsonData;
        Pages[0].Content = doc;
    }

    public async Task saveDoc()
    {
        // userDoc = Pages[0].Content;
        var page = Pages[0];
        string content = await JS!.InvokeAsync<string>("getContent", page.ElementRef);
        page.Content = content;
        //text to bytes
        byte[] bytes = Encoding.UTF8.GetBytes(content);
        foreach (byte b in bytes)
        {
            Console.WriteLine(b);
        }
        //bytes to string
        string ?textFromByte = null;

            textFromByte += Encoding.UTF8.GetString(bytes);
        Console.WriteLine(textFromByte);
    }
    string ?userDoc = null;
    DocumentCreateRequest GetDocumentCreateRequest { get; set; } = new DocumentCreateRequest { Name = "FirstDoc", JsonData = "12312312312", Metadata = null, TemplateId = 0 };
}
