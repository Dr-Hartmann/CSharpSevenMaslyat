@* @using Microsoft.AspNetCore.Authorization
@attribute [Authorize] *@


@* TODO
        По возможности перенёс стили CSS по своим местам,
        но применение сделал вместе с bootstrap.
        Ваша задача - либо найти подходящие bootstrap стили,
        либо удалить их из class="" и использовать своё.

        Нужно как-то избавиться от лишних вложенностей,
        или просто мне кажется.

        Скорее всего что-то потерял.
    *@


<div class="login-menu">
    <div class="login-back">
        <div class="login-main">
            <button class="button-login" @onclick="ToLog">Вход</button>
            <button class="button-register active" @onclick="ToReg">Регистрация</button>
            @*             <EditForm method="post" Model="NewUser" OnValidSubmit="Register" FormName="registration" Enhance>
                <DataAnnotationsValidator />
                <ValidationSummary class="text-danger" role="alert" />
                <div class="mb-3">
                    <label for="login" class="form-label label-format">Логин</label>
                    <InputText id="login" @bind-Value="NewUser.Login" class="form-control input-format-login" aria-required="true" />
                    <ValidationMessage For="() => NewUser.Login" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="password" class="form-label label-format">Пароль:</label>
                    <InputText id="password" @bind-Value="NewUser.Password" class="form-control input-format-password" />
                    <ValidationMessage For="() => NewUser.Password" class="text-danger" />
                </div>
                @if (CurrentPage == "login")
                {
                    <button type="submit" class="btn btn-primary button-enter">Войти</button>
                    <button class="button-guest active" @onclick="EnterLikeGuest">Войти как гость</button>
                }
                else if (CurrentPage == "registration")
                {
                    <button type="submit" class="btn btn-primary button-enter">Зарегистрироваться</button>
                }
            </EditForm> *@
        </div>
    </div>
</div>


@* TODO - Можно ли часть перенести в класс? *@

@inject NavigationManager NavigationManager
@inject HttpClient httpClient
@inject ILogger<FormLoginRegistration> Logger
@using MVPv5.Core.Models
@code {
    [Parameter]
    public string? CurrentPage { get; set; }

    [Parameter]
    public EventCallback<UserModel> OnDataChanged { get; set; }

    private void ToLog()
    {
        NavigationManager.NavigateTo("/login");
    }

    private void ToReg()
    {
        NavigationManager.NavigateTo("/registration");
    }

    // private UserModel NewUser { get; set; } = new();

    // private async Task Register()
    // {
    // TODO - нормальный запрос
    // var response = await httpClient.PostAsJsonAsync("documenteditor/create", NewDocument);
    // if (!response.IsSuccessStatusCode)
    // {
    //     Logger.LogError($"Ошибка: сервер вернул не JSON. Ответ: {response.Content.ReadAsStringAsync()}");
    //     return;
    // }


    // await OnDataChanged.InvokeAsync(NewUser);
    // Logger.LogError($"Вошёл: {NewUser.Password}");
    // Logger.LogCritical($"Вошёл: {NewUser.Password}");
    // Logger.LogInformation($"Вошёл: {NewUser.Password}");
    // Logger.LogTrace($"Вошёл: {NewUser.Password}");
    // Logger.LogWarning($"Вошёл: {NewUser.Password}");
    // TODO - не работает логгер


    // await Task.Delay(1000);
    // NavigationManager.NavigateTo("/editor");
    // }

    private void EnterLikeGuest()
    {
        // TODO - создание клиента-гостя с низким уровнем привелегий
        NavigationManager.NavigateTo("/editor");
    }
}
