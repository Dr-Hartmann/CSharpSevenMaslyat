<div class="upper-panel p-0">
    <button class="button-menu" @onclick="click"></button>
    <img class="separator-icon" src="Separator.png" alt="Separator">
    @* <button class="button-save" @onclick="OnSaveClicked"></button> *@

    @* потенциально не надо *@
    @* <button class="button-undo"></button> *@
    @* <button class="button-redo"></button> *@

    @if (ShowDiv)
    {
        <div class="PopUp-menu">
            <button class="button-user-menu" @onclick="ShowModal"><img src="Profil.png" class="profil-img">Профиль</button>
            <button class="button-user-menu" @onclick="DivShow"><img src="Shablon.png" class="profil-img">Выбор шаблона</button>
            @if (ShowDiv1)
            {
                <SelectPanelElements></SelectPanelElements>
            }
        </div>
    }
    @* @if (Flag() == true)
{

} *@
    @if (ShowMenu)
    {
        <div class="modal-overlay">
            <div class="modal-content">
                <p class="profile-upper">
                    <button class="button-close" @onclick="CloseModal">X</button>
                </p>
            @using MVPv5.Client.Menu
                <Profile></Profile>
            </div>
        </div>
    }
    @* @if (f.ShowSelectMenu == true)
{
    <div class="modal-overlay">
        <div class="modal-content">
            <p class="profile-upper">
                <button class="button-close" @onclick="CloseModal">X</button>
            </p>
            <Select></Select>
        </div>
    </div>
} *@

</div>

@code {
    // TODO - это можно заменить на Enum, если оно надо
    public bool ShowMenu { get; set; } = false;
    public bool ShowDiv1 { get; set; } = false;
    public bool ShowDiv { get; set; } = false;
    // SelectPanelElements f = new SelectPanelElements();

    // TODO это бл вообще что?
    public void click()
    {
        ShowDiv = !ShowDiv;
        if (!ShowDiv)
        {
            ShowDiv1 = false;
        }
    }

    public void ShowModal()
    {
        ShowMenu = !ShowMenu;
        click();
    }
    public void CloseModal()
    {
        ShowMenu = false;
    }

    // [Parameter]
    // public EventCallback OnSave { get; set; }

    // private async Task OnSaveClicked()
    // {
    //     if (OnSave.HasDelegate)
    //     {
    //         await OnSave.InvokeAsync();
    //     }
    //     else
    //     {

    //     }
    // }

    public void DivShow()
    {
        ShowDiv1 = !ShowDiv1;
    }
    // public bool Flag()
    // {
    //     return f.GetFlag();
    // }
}
