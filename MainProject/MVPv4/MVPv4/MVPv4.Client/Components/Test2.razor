@page "/test2"
@rendermode InteractiveServer
@using DTOmvp
@using Newtonsoft.Json

<PageTitle>Содержимое базы данных</PageTitle>

<h3>Содержимое базы данных</h3>

@if (list == null)
{
    <p>Данных нет...</p>
}
else
{
    @foreach (var item in list)
    {
        <dl class="row">
            <div class="form-label">
                ___________________________________________
                <dt class="col-sm-2">Год</dt>
                <dd class="col-sm-10">@item.Year</dd>
                <dt class="col-sm-2">Титульник</dt>
                <dd class="col-sm-10">@item.Title</dd>
                <dt class="col-sm-2">Описание</dt>
                <dd class="col-sm-10">@item.Topic</dd>
                <dt class="col-sm-2">Аннотация</dt>
                <dd class="col-sm-10">@item.Annotation</dd>
            </div>
        </dl>
    }
}


<div class="row mb-5">
    <button class="btn btn-primary" @onclick="GetData">Получить данные</button>
</div>

@inject IHttpClientFactory HttpClientFactory
@code {
    private List<DTOdocumentV1> list;

    private async Task GetData()
    {
        list = null;

        var t = new CancellationTokenSource(2000);

        var httpClient = HttpClientFactory.CreateClient("MyClient");

        var response = await httpClient.GetAsync("documenteditor/all", t.Token);

        if (response.Content.Headers.ContentType?.MediaType != "application/json")
        {
            var errorContent = await response.Content.ReadAsStringAsync(t.Token);
            Console.WriteLine($"Ошибка: сервер вернул не JSON. Ответ: {errorContent}");
            Console.WriteLine($"{response.Content.Headers.ContentType?.MediaType}");
            Console.WriteLine($"{response.Content.Headers.ContentType}");
            Console.WriteLine($"{response.Content.Headers}");
            Console.WriteLine($"{response.Content}");
            return;
        }
        else
        {
            list = (await response.Content.ReadFromJsonAsync<IEnumerable<DTOdocumentV1>>(t.Token)).ToList();
        }
    }

    // CORS
    // Kestrel вместе

    //     if (!response.IsSuccessStatusCode)
    //     {
    //         set error message for display, log to console and return
    //         string errorMessage = response.ReasonPhrase;
    //         Console.WriteLine($"There was an error! {errorMessage}");
    //         return;
    //     }

}
