@* @page "/documentv1s/details"
@using MVPv4.Data
@using MVPv4.Models
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<MVPv4Context> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>DocumentV1</h2>
    <hr />
    @if (documentv1 is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <dl class="row">
            <div class="form-label">
                <dt class="col-sm-2">Name</dt>
                <dd class="col-sm-10">@documentv1.Name</dd>
                <dt class="col-sm-2">File</dt>
                <dd class="col-sm-10">@documentv1.File</dd>
                <dt class="col-sm-2">Year</dt>
                <dd class="col-sm-10">@documentv1.Year</dd>
                <dt class="col-sm-2">Title</dt>
                <dd class="col-sm-10">@documentv1.Title</dd>
                <dt class="col-sm-2">Topic</dt>
                <dd class="col-sm-10">@documentv1.Topic</dd>
                <dt class="col-sm-2">Annotation</dt>
                <dd class="col-sm-10">@documentv1.Annotation</dd>
            </div>
        </dl>
        <div>
            <a href="@($"/documentv1s/edit?id={documentv1.Id}")">Edit</a> |
            <a href="@($"/documentv1s")">Back to List</a>
        </div>
    }
</div>

@code {
    private DocumentV1? documentv1;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        documentv1 = await context.DocumentV1.FirstOrDefaultAsync(m => m.Id == Id);

        if (documentv1 is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }


            // try
        // {
        //     documentv1 = await httpClient.GetFromJsonAsync<DTOdocumentV1>("/test5/");
        // }
        // catch (HttpRequestException ex)
        // {
        //     Console.WriteLine($"Ошибка HTTP: {ex.Message}");
        // }
        // catch (JsonException ex)
        // {
        //     Console.WriteLine($"Ошибка JSON: {ex.Message}");
        // }
        // catch (Exception ex)
        // {
        //     Console.WriteLine($"Неизвестная ошибка: {ex.Message}");
        // }
}



 *@