@page "/documentv1s/create"
@using DTOmvp
@inject IHttpClientFactory HttpClientFactory
@inject NavigationManager NavigationManager
@rendermode InteractiveAuto

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>DocumentV1</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="NewDocument" OnValidSubmit="AddDocumentV1" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert" />
            <div class="mb-3">
                <label for="name" class="form-label">Name:</label>
                <InputText id="name" @bind-Value="NewDocument!.Name" class="form-control" aria-required="true" />
                <ValidationMessage For="() => NewDocument.Name" class="text-danger" />
            </div>
            @*             <div class="mb-3">
                <label for="file" class="form-label">File:</label> 
                <InputText id="file" @bind-Value="DocumentV1.File" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => DocumentV1.File" class="text-danger" /> 
            </div>     *@    
            <div class="mb-3">
                <label for="year" class="form-label">Year:</label>
                <InputDate id="year" @bind-Value="NewDocument!.Year" class="form-control" />
                <ValidationMessage For="() => NewDocument!.Year" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="title" class="form-label">Title:</label>
                <InputText id="title" @bind-Value="NewDocument!.Title" class="form-control" />
                <ValidationMessage For="() => NewDocument.Title" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="topic" class="form-label">Topic:</label>
                <InputText id="topic" @bind-Value="NewDocument!.Topic" class="form-control" />
                <ValidationMessage For="() => NewDocument.Topic" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="annotation" class="form-label">Annotation:</label>
                <InputText id="annotation" @bind-Value="NewDocument!.Annotation" class="form-control" />
                <ValidationMessage For="() => NewDocument.Annotation" class="text-danger" />
            </div>
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/documentv1s">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private DTOdocumentV1? NewDocument { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddDocumentV1()
    {
        var httpClient = HttpClientFactory.CreateClient("MyClient");
        var response = await httpClient.PostAsJsonAsync("documenteditor/create", NewDocument);

        if (!response.IsSuccessStatusCode)
        {
            // Console.WriteLine($"There was an error! {errorMessage}");
            Console.WriteLine($"Ошибка: сервер вернул не JSON. Ответ: {response.Content.ReadAsStringAsync()}");
            return;
        }

        NavigationManager.NavigateTo("/documentv1s");
    }
}
